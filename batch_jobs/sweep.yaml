program: train.py
method: grid
metric:
  name: val/loss
  goal: minimize
parameters:
  task:
    values:
      # - hr_to_lr_dev
      # - wdc-v3-cluster200
      # - cluster50_top10clusters_max20percluster
      - wdc4-clusters50
      # - wdc4-clusters200
      # - wdc4-clusters500
      # - wdc4-clusters2000
  wandb_tags:
    values: ['best-in-sweep,full-tasks-eval,wdc-v4-best-clusters']
  max_examples_per_task:
    values: [200]
  gradient_accumulation_steps:
    values: [1]
  lr:
    values: [5e-6]
  shuffle:
    values: [1]
  shuffle_examples_seed:
    values: [0,1,2]
  label_smoothing:
    values: [0.0]
  debug_data_order:
    values: [0]
  num_training_steps:
    values: [30000]
  repeat_batch:
    values: [1]
  verbose_train:
    values: [0]
  is_cluster_dataset:
    values: [1]
  cluster_idxs:
    values:
      - '48,6,13,47,21'
      - '48,6,13,47,21,42,17,10,25,33'
      - '48,6,13,47,21,42,17,10,25,33,2,18,3,35,11,23,36,31,20,45'
  max_tasks_per_cluster:
    values: [5, 20]
  # gpt2:
  #   values: ["gpt2-xl", "gpt2-large"]
  # init_checkpoint:
  #   values: ['checkpoints/metaicl/wdc-v2_cluster_t200/metaicl_m200-best_task_dev_score.pt']
command:
  - python
  - ${program}
  - ${args}